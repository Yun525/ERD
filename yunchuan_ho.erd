erdiagram RC_Models
notation=crowsfoot

/*
  ERD for RC_Models Company â€” bigER Crow's Foot notation
  - Based on business rules and entity list from the Group18 assignment
  - Business rules and assumptions are documented below (also kept in comments)
*/

entity Customer {
	customer_id: INTEGER key
	first_name
	last_name
	address
	dob: DATE
	gender
	phone
	email
}

entity Campaign {
	campaign_id: INTEGER key
	campaign_name
	start_date: DATE
	end_date: DATE
}

entity Manufacturer {
	manufacturer_id: INTEGER key
	name
	address
	phone
	city
	zip_code
}

entity ProductCategory {
	product_category_id: VARCHAR(20) key
	category_name
}

entity Product {
	product_id: VARCHAR(20) key
	name
	description
	scale
	min_order_qty: INTEGER
	on_hand_qty: INTEGER
	active: BOOLEAN
	manufacturer_id: INTEGER
}

entity Invoice {
	invoice_id: INTEGER key
	customer_id: INTEGER
	invoice_date: DATE
	total_price: DECIMAL(10,2)
	payment_condition
	shipment_condition
	shipment_date: DATE
}

entity InvoiceLine {
	invoice_line_id: INTEGER key
	invoice_id: INTEGER
	product_id: VARCHAR(20)
	quantity: INTEGER
	price: DECIMAL(10,2)
}


entity PurchaseOrder {
	order_id: INTEGER key
	manufacturer_id: INTEGER
	order_date: DATE
	total_price: DECIMAL(10,2)
	payment_condition
	received_date: DATE
}

entity OrderLine {
	order_line_id: INTEGER key
	order_id: INTEGER
	product_id: VARCHAR(20)
	quantity: INTEGER
	price: DECIMAL(10,2)
}

/* Associative entity to implement Product <-> ProductCategory (many-to-many)
   Composite key: (product_category_id, product_id)
*/
entity Product_Category_Menu {
	product_category_id: VARCHAR(20) key
	product_id: VARCHAR(20) key
}

/* Relationships (crow's foot cardinalities and roles) */

relationship CustomerInvoice {
	Customer[0..N | "customer"] -> Invoice[1 | "invoice"]
}

relationship InvoiceInvoiceLine {
	Invoice[1 | "invoice"] -> InvoiceLine[1..N | "line"]
}

relationship ProductInvoiceLine {
	Product[0..N | "product"] -> InvoiceLine[1 | "invoice_line"]
}

relationship ManufacturerProduct {
	Manufacturer[0..N | "manufacturer"] -> Product[1 | "product"]
}

relationship Product_to_ProductCategoryMenu {
	Product[1 | "product"] -> Product_Category_Menu[0..N | "menu"]
}

relationship ProductCategory_to_ProductCategoryMenu {
	ProductCategory[1 | "category"] -> Product_Category_Menu[0..N | "menu"]
}


relationship PurchaseOrderManufacturer {
	PurchaseOrder[1 | "order"] -> Manufacturer[1 | "manufacturer"]
}

relationship PurchaseOrder_OrderLine {
	PurchaseOrder[1 | "order"] -> OrderLine[1..N | "order_line"]
}

relationship ProductOrderLine {
	Product[0..N | "product"] -> OrderLine[1 | "order_line"]
}

relationship CustomerCampaign {
	Customer[0..N | "customer"] -> Campaign[0..N | "campaign"]
}

/*
  Business rules (extracted / encoded):
  a) A customer may generate many invoices.
  b) Each invoice is generated by only one customer.
  c) Some customers have not (yet) generated an invoice.
  d) A manufacturer may supply many products.
  e) A product is supplied by exactly one manufacturer.
  f) Each Product can appear in many InvoiceLines.
  g) A product will be removed (or marked inactive) if it has not recorded a sale within four weeks of being stocked.
  h) An InvoiceLine includes only one product.
  i) An Invoice must include at least one InvoiceLine.
  j) Each InvoiceLine belongs to exactly one Invoice.
  k) Each customer can purchase zero to more products (through invoices).
  l) Each customer may participate in zero or more marketing campaigns.

  Additional assumptions (from assignment):
  - Each product belongs to one or more product categories (modeled via Product_Category_Menu associative entity).
  - Each manufacturer may or may not have an order recorded in the system.
  - Payment / CC Bank interactions are external to this ERD (payments not modeled as a full entity here).
  - Inventory quantity and automated ordering thresholds are tracked (some attributes included) but detailed inventory transactions are out-of-scope.
*/

